Types of Constructors :
1. Default or Parameter Less Constructor
2. Parameterized Constructor
3. Copy Constructor
4. Static Constructor

1. Default or Parameter Less Constructor ::
-If a constructor method doesn't take any parameters then we call
that as default or parameter less. These constructors can be defined
by a programmer explicitly or else will be default implicitly
provided there is no explicit constructor under the class

2. Parameterized Constructor :::
If a constructor method is defined with out any parameters we call
that as parameterized constructor and these constructors can be
defined by the programmers only but never can be defined implicitly.

3. Copy Constructor :::
If we want to create multiple instances with the same values then we
use these copy constructors, in a copy constructor the constructor
takes the same class as a parameter to it.

4 . Static Constructor :::
If a constructor is explicitly declared by using className only we
call that as Static Constructor. All the constructors we have defined
till now are non-static or instance constructors.

4a. If a class contains any static variables then only implicit static constructors will be present or else we need to define them explicitly
   whereas non-static constructors will be implicitly defined in every class (except static class) provided we did not define them explicitly.

4b. Static constructor are responsible in initializing static variables and these constructors are never called explicitly 
   they are implicitly called and more over these constructor are first to execute under any class.

4c. Static constructors can't be parameterized so overloading of static constructors is not possible.

--------------------------------------------------------------------------------------------------------------------------------------------
-Every class requires a constructor to be present in it if we want
to create the instance of that class.
-Every class contains an implicit constructor if not defined
explicitly and with the help of that implicit constructor instance
of class can be created.

-What is the need of defining a constructor explicitly again ??
A> Implicit constructors of a class will initialize variables of a
class with the same value even if we create multiple instances of
that class.
B> If we define constructors explicitly with parameters then we get
a change of initializing the fields or variables of the class with
a new value every time we are going to create instance of that
class.

Note: Generally every class requires some values for execution and
the values that are required for a class to execute are always
sent to that class by using the constructor only.

